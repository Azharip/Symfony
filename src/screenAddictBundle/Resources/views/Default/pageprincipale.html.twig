{% extends "screenAddictBundle::layout.html.twig" %}

{% block title %}{{ parent() }} - Page principale{% endblock %}

{% block body %}

	<div>
		<h1 href="{{ path('home')}}">screenAddict</h1>
		{{ form_start(rech) }}
		{{ form_widget(rech.recherche, {'id': 'labelres'}) }}
		{{ form_end(rech) }}
		<div id="recherche">

		</div>
	</div>

		<div id="leftbodymain">
			<p id="menuRoot">
				{{ app.user.username }}
			</p>
			<div id="menuUser">
				{{ knp_menu_render('screenAddictBundle:Builder:menuUser') }}
			</div>
		</div>

		<div id="bodymain">
			{{ form_start(mesform) }}
			{{ form_widget(mesform.message,{'id': 'labelmes'}) }}
			{{ form_end(mesform) }}
			{% for message in messageList %}
				<div id="posts">
					<p>{{message.content}}</p>
					par : {{message.usernameAuthor}} le {{message.datePost|date("d/m/Y")}}
				</div>
			{% endfor %}
		</div>

		<div id="rightbodymain">
		</div>

	</div>

	<button class="ajax">click me!</button>
    <div id="ajax-results">here comes the result</div>

	<script>
		var form = document.getElementById("res");
		form.onkeydown = function() {
			form.submit();
		}

		var labelres = document.getElementById("labelres");
		labelres.onclick = function() {clearResearch()};
		labelres.onfocusout = function() {focusoutResearch()};

		function clearResearch()
		{
			labelres.value="";
		}

		function focusoutResearch()
		{
			labelres.value="Recherchez un film";
		}

		var labelmes = document.getElementById("labelmes");
		labelmes.onclick = function() {clearMessage()};
		labelmes.onfocusout = function() {focusoutMessage()};

		function clearMessage()
		{
			labelmes.value="";
		}

		function focusoutMessage()
		{
			labelmes.value="Entrez votre message";
		}

		var menuRoot = document.getElementById("menuRoot");
		var menuUser = document.getElementById("menuUser");
		var isMenuUserDeployed = false;
		menuUser.style.visibility = "hidden";
		menuRoot.onmousedown = function() {showMenu()};

		function showMenu()
		{
			if(!isMenuUserDeployed){
				menuUser.style.visibility = "visible"
				isMenuUserDeployed = true;
			}
			else {
				menuUser.style.visibility = "hidden"
				isMenuUserDeployed = false;
			}
		}

		$(document).on('click', 'button.ajax', function(){
            that = $(this);
            $.ajax({
                url:'{{ (path('rechercher')) }}',
                type: "POST",
                dataType: "json",
                data: {
                    "test1": "prout"
                },
                async: true,
                success: function (data)
                {
                    console.log(data)
                    $('div#ajax-results').html(data.output);

                }
            });
            return false;

        });

		/*$('body').submit(function(e){
			e.preventDefault();
			var $this = $(this);
			$.ajax
			({
		        type: 'POST',
		        url: "{{ path('rechercher')}}",
				data: new FormData( $this[0] )
			}).done(function(msg){
				$('#recherche').innerHTML = "";
				$.each(JSON.parse(msg['data']),function(i,item){
					var div = document.createElement('div');
					var text = document.createTextNode("Titre : "+item.title);
					div.appendChild(text);
					$('#recherche').appendChild(div);
				})
			})
		});*/
	</script>

{% endblock %}
